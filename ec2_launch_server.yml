---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: t2.medium
      security_group: webserver2 # Change the security group name here
      image: ami-b374d5a5 #ubuntu 14 ami-9eaa1cf6  Change the AMI, from which you want to launch the server
      region: us-east-1 # Change the Region
      keypair: ansible # Change the keypair name
      count: 1

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:
    ### Create Amazon EC2 key pair
      - name: Amazon EC2 | Create Key Pair
        ec2_key:
          name: "{{ keypair }}"
          region: "{{ region }}"
          key_material: "{{ item }}"
        with_file: ~/.ssh/amazon.pub

      - name: Create a security group
        tags: security
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for webserver Servers
          region: "{{ region }}"
          rules:
            - proto: all
              from_port: -1
              to_port: -1
              cidr_ip: 0.0.0.0/0

          rules_egress:
            - proto: all
              from_port: -1
              to_port: -1
              cidr_ip: 0.0.0.0/0

      - name: Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: Clear the master group from the inventory
        ini_file:
          dest: ./hosts
          section: webserver
          state: absent

      - name: Add the newly created EC2 instance(s) to the masters group (located inside the directory)
        ini_file:
          dest: ./hosts
          section: webserver
          option: "node_{{item.0}}"
          value: "{{item.1.public_ip}}"
          no_extra_spaces: yes
        with_indexed_items: "{{ ec2.instances }}"

      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: webserver
